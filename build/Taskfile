#!/usr/bin/env bash
# b5 Taskfile, see https://git.team23.de/build/b5 for details

pkg:uv() {
    (
        cd .. &&
        uv "$@"
    )

}

task:uv() {
    pkg:uv "$@"
}

task:install() {
    pkg:uv sync --group dev
}

task:update() {
    pkg:uv sync --group dev
}

task:b5() {
    # Runs the dev version of b5 inside the virtualenv
    # Use Taskfile.local and local.yml for testing
    pkg:uv run b5 "$@"
}

task:b5-init() {
    # Runs the dev version of b5 inside the virtualenv
    # Use Taskfile.local and local.yml for testing
    pkg:uv run b5-init "$@"
}

task:shell() {
    (
        source "${PROJECT_PATH}/.venv/bin/activate"
        echo -e "${B5_FONT_GREEN}Starting ${SHELL:-/bin/zsh} in a new virtualenv environment, happy developing${B5_FONT_RESTORE}"
        ${SHELL:-/bin/zsh} "$@"
    )
}

task:pypi:release() {
    pkg:uv build && \
    pkg:uv publish
}

task:lint() {
    pkg:uv run ruff check b5/
}

task:ruff() {
    pkg:uv run ruff check b5/ "$@"
}

task:test() {
    pkg:uv run pytest b5/
}

task:qa() {
    task:lint
    task:test
}

task:release() {
    VERSION="${1:-}"

    if [ -z "${VERSION}" ]
    then
        b5:abort "Usage: b5 release <version>"
    fi

    cd "$PROJECT_PATH"
    uv version "${VERSION}"
    sed -i '' "s/^VERSION = .*/VERSION = '${VERSION}'/" b5/__init__.py
    git add pyproject.toml uv.lock
    git commit -m "release: ðŸ”– v${VERSION}" --no-verify
    git tag "v${VERSION}"
    git push
    git push --tags
}
